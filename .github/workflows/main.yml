# .github/workflows/main.yml

name: Download, Upload to OSS, and Update Links

# 触发器：当有 push 操作到 main 分支时触发
on:
  push:
    branches:
      - main

jobs:
  build-and-upload:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 运行环境

    steps:
      # 第 1 步：检出代码
      # 拉取你的仓库代码到 Action 的工作环境中
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第 2 步：设置 Python 环境
      # 安装指定版本的 Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # 你可以指定你需要的 Python 版本

      # 第 3 步：安装依赖
      # 根据 requirements.txt 文件安装 Python 库
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 第 4 步：运行 Python 脚本
      # 执行上传到 OSS 的核心脚本
      - name: Run Python script to upload to OSS
        env:
          # 将 GitHub Secrets 传递给 Python 脚本作为环境变量
          OSS_ACCESS_KEY_ID: ${{ secrets.OSS_ACCESS_KEY_ID }}
          OSS_ACCESS_KEY_SECRET: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
          OSS_BUCKET_NAME: ${{ secrets.OSS_BUCKET_NAME }}
          OSS_ENDPOINT: ${{ secrets.OSS_ENDPOINT }}
        run: python upload_to_oss.py

      # 第 5 步：提交变更
      # 如果 links.txt 文件有变化，则将其提交回仓库
      - name: Commit and push if changed
        run: |
          # 配置 Git 用户信息
          git config --global user.name "lhnows"
          git config --global user.email "lhnows@qq.com"
          
          # 检查文件是否有变更
          if [[ -n $(git status -s links.txt) ]]; then
            echo "links.txt has changed. Committing back to the repository."
            git add links.txt
            git commit -m "Update links.txt with OSS URLs [skip ci]"
            git push
          else
            echo "No changes in links.txt. Nothing to commit."
          fi
